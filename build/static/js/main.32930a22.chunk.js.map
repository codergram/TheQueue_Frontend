{"version":3,"sources":["images/theQ2.jpg","components/Logo.component.jsx","components/Header.component.jsx","components/Uddannelse.component.jsx","components/Footer.component.jsx","components/Semester.component.jsx","images/tutor.jpg","components/Queue.component.jsx","components/Home.component.jsx","components/NoMatch.component.jsx","components/Login.component.jsx","App.js","settingsBackend.js","utils.js","facades/examFacade.js","index.js"],"names":["Logo","className","src","picture","alt","Header","isLoggedIn","loginMsg","exact","activeClassName","to","Uddannelse","props","uddannelse","schoolName","facade","educations","map","udd","name","style","color","id","Footer","useState","dailyInfected","dailyRecovered","intensive","dailyDead","setProxyData","useEffect","getProxy","data","console","log","backgroundColor","fontSize","Semester","uddName","semestrene","find","s","semesters","semestre","uddannelser","sem","Queue","semesterId","question","description","password","student","email","studentLink","topic","timestamp","answer","teacher","teacherName","zoom_url","teacherLink","list","q","setQ","qList","setQlist","qListToSearch","setQlistToSearch","qToShow","setQtoShow","oldQ","setOldQ","opdateList","setOpdateList","teacherEmail","setTeacherEmail","createQ","setCreateQ","showQ","setShowQ","getQuestions","questions","filter","quest","localStorage","getItem","alreadyAnsweredQuestions","reverse","notYetAnsweredQuestions","interval","setInterval","clearInterval","closeCreateQ","closeShowQ","handleShowQ","event","parseInt","currentTarget","questionToShow","theQuestionToShow","width","onClick","type","onChange","htmlFor","placeholder","size","searchField","target","value","toLowerCase","length","newList","includes","scope","next","index","cursor","Date","replace","toLocaleDateString","replaceAll","toTimeString","slice","maxWidth","open","onClose","center","classNames","overlay","modal","checked","onSubmit","preventDefault","theQuestionToSend","addQuestion","defaultValue","required","rows","marginLeft","href","rel","answerToSend","addAnswer","readOnly","Home","schoolData","school","img","NoMatch","location","useLocation","pathname","Login","setLoginStatus","utils","login","displayError","clearError","username","loginCredentials","setLoginCredentials","state","from","logout","evt","setTimeout","App","setSchoolData","setIsLoggedIn","setDisplayError","history","useHistory","getData","status","pageToGoTo","push","path","semester","schoolId","uddId","semesterName","user","pass","then","res","catch","error","fullError","errorMsg","message","SERVER_URL_BACKEND","handleHttpErrors","ok","json","document","getElementById","innerHTML","display","Promise","reject","makeOptions","method","addToken","body","opts","headers","Accept","loggedIn","getToken","JSON","stringify","setToken","token","setItem","saveEmail","fetchAny","url","callback","options","fetch","err","e","detail","fetchWelcomeData","SERVER_URL","removeItem","apiUtils","semesterID","AppWithRouter","ReactDOM","render"],"mappings":"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","file":"static/js/main.32930a22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/theQ2.feb1f0a0.jpg\";","import React from \"react\";\nimport picture from \"../images/theQ2.jpg\"\n\nconst Logo = () => (\n  <div>\n    <img className=\"img-fluid\" src={picture} alt=\"logo\" />\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport {\n  // BrowserRouter as Router,\n  // Switch,\n  // Route,\n  // Link,\n  NavLink,\n  // Redirect,\n  //   useLocation,\n  // Prompt,\n  // useRouteMatch,\n  // useParams,\n  // useHistory,\n} from \"react-router-dom\";\n\nexport default function Header({ isLoggedIn, loginMsg }) {\n  return (\n    <div>\n      <ul className=\"header\">\n        <li>\n          <NavLink exact activeClassName=\"active\" to=\"/\">\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/login-out\">\n            {loginMsg}\n          </NavLink>\n        </li>\n      </ul>\n\n      <hr />\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  // BrowserRouter as Router,\n  // Switch,\n  // Route,\n  Link,\n  //   NavLink,\n  // Redirect,\n  // useLocation,\n  // Prompt,\n  // useRouteMatch,\n  // useParams,\n  // useHistory,\n} from \"react-router-dom\";\nimport \"../style/uddannelsesStyle.css\";\n\nexport default function Uddannelse(props) {\n  const { uddannelse, schoolName, facade } = props;\n  // const [uddannelser] = useState([...uddannelse.uddannelser]);\n  // const [school] = useState(schoolName);\n\n  return (\n    <div>\n      {/* {console.log(uddannelse)} */}\n      {/* {console.log(uddannelse.uddannelser)} */}\n      {/* {console.log(school)} */}\n      {/* {JSON.stringify(uddannelser)} */}\n\n      <div className=\"row\">\n        {uddannelse.educations.map((udd) => (\n          <div className=\"col-md-4 theMargin\" key={udd.id}>\n            <div className=\"\">\n              <Link\n                className=\"item-box the-box underline\"\n                to={`/` + schoolName + `/` + udd.name}\n              >\n                <h1 className=\"text-center udd\" style={{ color: \"black\" }}>\n                  {udd.name}\n                </h1>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Footer(props) {\n  const covidDefault = {\n    dailyInfected: 0,\n    dailyRecovered: 0,\n    intensive: 0,\n    dailyDead: 0,\n  };\n  const { facade } = props;\n  const [proxyData, setProxyData] = useState({...covidDefault});\n\n  useEffect(() => {\n    facade.getProxy((data) => {\n      console.log(data);\n      setProxyData({ ...data });\n    });\n  }, []);\n\n  return (\n    <div\n      className=\"fixed-bottom\"\n      style={{ backgroundColor: \"rgba(255,255,255, 0.9)\" }}\n    >\n      <div className=\"container\">\n        <div className=\"row\">\n          {/* <div className=\"col-4 col-md-4 text-center\"></div> */}\n          <div className=\"col-12 col-md-12 text-center\">\n            <h6 style={{ fontSize: \"80%\" }}>Made with love by Codergram &#10084;</h6>\n          </div>\n          {/* <div className=\"col-4 col-md-4 text-center\"></div> */}\n        </div>\n\n        {/* <br style={{lineHeight: \"10%\"}}/> */}\n\n        {/* <div style={{ height: \"3px\" }}></div> */}\n\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  // BrowserRouter as Router,\n  // Switch,\n  // Route,\n  Link,\n//   NavLink,\n  // Redirect,\n  // useLocation,\n  // Prompt,\n  // useRouteMatch,\n  // useParams,\n  // useHistory,\n} from \"react-router-dom\";\nimport Footer from \"./Footer.component\";\nimport \"../style/uddannelsesStyle.css\";\n\nexport default function Semester(props) {\n  const { uddannelse, schoolName, uddName, facade } = props;\n  const semestrene = uddannelse.educations.find(s => s.name === uddName);\n  const [semestre] = useState([...semestrene.semesters]);\n\n  useEffect(() => {\n    \n  }, []);\n\n  return (\n    <div>\n      {console.log(uddannelse.uddannelser)}\n      {console.log(semestrene)}\n      {console.log(semestre)}\n      {console.log(schoolName)}\n      {console.log(uddName)}\n      {/* {JSON.stringify(semestrene.semestre)} */}\n\n      <div className=\"row\">\n        {semestrene.semesters.map((sem) => (\n          <div className=\"col-md-4 theMargin\" key={sem.id}>\n            <div className=\"\">\n              <Link className=\"item-box the-box underline\" to={`/` + schoolName + `/` + uddName + `/` + sem.name}>\n              <h1 className=\"text-center udd\" style={{color: \"black\"}}>{sem.name}</h1> \n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n      <Footer facade={facade}/>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/tutor.50ddf02e.jpg\";","import React, { useState, useEffect } from \"react\";\nimport CreateQModal from \"react-responsive-modal\";\nimport ShowQModal from \"react-responsive-modal\";\nimport \"../style/uddannelsesStyle.css\";\nimport picture from \"../images/tutor.jpg\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../style/modal.css\";\n\nexport default function Queue(props) {\n  const {\n    // semesterName,\n    semesterId,\n    // schoolName,\n    // schoolId,\n    // uddName,\n    // uddId,\n    facade,\n    isLoggedIn,\n  } = props;\n\n  const question = {\n    id: -1,\n    description: \"\",\n    password: \"\",\n    semesterId: semesterId,\n    student: {\n      name: \"\",\n      email: \"\",\n    },\n    studentLink: \"\",\n    topic: \"\",\n    timestamp: \"\",\n    // teacher: {\n    //   teacherName: \"\",\n    //   zoom_url: \"\",\n    // },\n    answer: {\n      id: -1,\n      teacher: {\n        id: -1,\n        teacherName: \"\",\n        email: \"\",\n        password: \"\",\n        zoom_url: \"\",\n      },\n      answer: \"\",\n      teacherLink: \"\",\n    },\n  };\n\n  const list = [];\n\n  const [q, setQ] = useState({ ...question });\n  const [qList, setQlist] = useState([...list]);\n  const [qListToSearch, setQlistToSearch] = useState([...list]);\n  const [qToShow, setQtoShow] = useState({ ...question });\n  const [oldQ, setOldQ] = useState(false);\n  const [opdateList, setOpdateList] = useState(false);\n  const [teacherEmail, setTeacherEmail] = useState(\"\");\n  // const [opdateTheList, setOpdateTheList] = useState(true);\n  //Modals\n  const [createQ, setCreateQ] = useState(false);\n  const [showQ, setShowQ] = useState(false);\n  // let answeredQuestions = { answeredQuestions: false };\n\n  useEffect(() => {\n    facade.getQuestions(semesterId, (data) => {\n      console.log(data);\n      const questions = data.filter((quest) => quest.answer.id === -1);\n      setQlist([...questions]);\n      setQlistToSearch([...questions]);\n    });\n\n    if (isLoggedIn) {\n      setTeacherEmail(localStorage.getItem(\"teacherEmail\"));\n    }\n\n    // const interval = setInterval(() => {\n    //   console.log(oldQ);\n    //   console.log(\"opadate\");\n    //   facade.getQuestions(semesterId, (data) => {\n    //     console.log(data);\n    //     if (oldQ === true) {\n    //       const alreadyAnsweredQuestions = data.filter(\n    //         (quest) => quest.answer.id !== -1\n    //       );\n    //       setQlist([...alreadyAnsweredQuestions.reverse()]);\n    //       setQlistToSearch([...alreadyAnsweredQuestions.reverse()]);\n    //     } else {\n    //       const notYetAnsweredQuestions = data.filter(\n    //         (quest) => quest.answer.id === -1\n    //       );\n    //       setQlist([...notYetAnsweredQuestions]);\n    //       setQlistToSearch([...notYetAnsweredQuestions]);\n    //     }\n    //   });\n    // }, 5000);\n\n    // return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    facade.getQuestions(semesterId, (data) => {\n      console.log(data);\n      if (oldQ === true) {\n        const alreadyAnsweredQuestions = data.filter(\n          (quest) => quest.answer.id !== -1\n        );\n        setQlist([...alreadyAnsweredQuestions.reverse()]);\n        setQlistToSearch([...alreadyAnsweredQuestions.reverse()]);\n      } else {\n        const notYetAnsweredQuestions = data.filter(\n          (quest) => quest.answer.id === -1\n        );\n        setQlist([...notYetAnsweredQuestions]);\n        setQlistToSearch([...notYetAnsweredQuestions]);\n      }\n    });\n\n    const interval = setInterval(() => {\n      console.log(oldQ);\n      console.log(\"opadate\");\n      facade.getQuestions(semesterId, (data) => {\n        console.log(data);\n        if (oldQ === true) {\n          const alreadyAnsweredQuestions = data.filter(\n            (quest) => quest.answer.id !== -1\n          );\n          setQlist([...alreadyAnsweredQuestions.reverse()]);\n          setQlistToSearch([...alreadyAnsweredQuestions.reverse()]);\n        } else {\n          const notYetAnsweredQuestions = data.filter(\n            (quest) => quest.answer.id === -1\n          );\n          setQlist([...notYetAnsweredQuestions]);\n          setQlistToSearch([...notYetAnsweredQuestions]);\n        }\n      });\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [oldQ, opdateList]);\n\n  //Open Modals\n  const openCreateQ = () => {\n    setQ({ ...question });\n    setCreateQ(true);\n  };\n\n  const openShowQ = () => {\n    setShowQ(true);\n  };\n\n  //Close Modals\n  const closeCreateQ = () => {\n    setCreateQ(false);\n  };\n\n  const closeShowQ = () => {\n    setQ({ ...question });\n    setQtoShow({ ...question });\n    setShowQ(false);\n  };\n\n  //After Modal open\n  // function afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  // }\n\n  /**\n   * Create Q Modal\n   */\n  const handleChangeCreateQ = (event) => {\n    //console.log(event.target.value);\n    const target = event.target;\n    //console.log(target);\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    //console.log(\"Value: \" + target.type === \"checkbox\" ? target.checked : target.value);\n    const name = target.name;\n    console.log(\"Name: \" + name);\n    if (name === \"name\" || name === \"email\") {\n      console.log(name);\n      q.student[name] = value;\n      setQ({ ...q });\n      //setQ({ ...q, [name]: value });\n    }\n    // else if(name === \"teacherName\" || name === \"zoom_url\"){\n    //     q.teacher[name] = value;\n    //     setQ({ ...q});\n    // }\n    else {\n      q[name] = value;\n      setQ({ ...q, [name]: value });\n    }\n    // q[name] = value;\n    // setQ({ ...q, [name]: value });\n    console.log(q);\n  };\n\n  const handleSubmitCreateQ = (event) => {\n    event.preventDefault();\n\n    const theQuestionToSend = {\n      description: q.description,\n      password: q.password,\n      semesterId: q.semesterId,\n      student: {\n        email: q.student.email,\n        name: q.student.name,\n      },\n      studentLink: q.studentLink,\n      topic: q.topic,\n    };\n\n    facade.addQuestion(theQuestionToSend, (data) => {\n      console.log(data);\n      setQ({ ...question });\n      setOpdateList(!opdateList); //Bruges til at opdatere liste\n    });\n    closeCreateQ();\n  };\n\n  /**\n   * Show Q Modal\n   */\n  const handleShowQ = (event) => {\n    // console.log(event.currentTarget);\n    // console.log(event.target);\n    // const target = event.currentTarget;\n    // console.log(target);\n    const id = parseInt(event.currentTarget.id);\n    console.log(id);\n    const questionToShow = qList.find((quest) => quest.id === id);\n    console.log(questionToShow);\n    const theQuestionToShow = {\n      id: questionToShow.id,\n      description: questionToShow.description,\n      password: questionToShow.password,\n      semesterId: questionToShow.semesterId,\n      student: {\n        email: questionToShow.student.email,\n        name: questionToShow.student.name,\n      },\n      studentLink: questionToShow.studentLink,\n      topic: questionToShow.topic,\n      timestamp: questionToShow.timestamp,\n      answer: {\n        id: questionToShow.answer.id,\n        teacher: {\n          id: questionToShow.answer.teacher.id,\n          teacherName:\n            questionToShow.answer.teacher.teacherName === null\n              ? \"\"\n              : questionToShow.answer.teacher.teacherName,\n          email:\n            questionToShow.answer.teacher.email === null\n              ? \"\"\n              : questionToShow.answer.teacher.email,\n          password:\n            questionToShow.answer.teacher.password === null\n              ? \"\"\n              : questionToShow.answer.teacher.password,\n          zoom_url:\n            questionToShow.answer.teacher.zoom_url === null\n              ? \"\"\n              : questionToShow.answer.teacher.zoom_url,\n        },\n        answer:\n          questionToShow.answer.answer === null\n            ? \"\"\n            : questionToShow.answer.answer,\n        teacherLink:\n          questionToShow.answer.teacherLink === null\n            ? \"\"\n            : questionToShow.answer.teacherLink,\n      },\n    };\n    //console.log(questionToShow);\n    setQtoShow({ ...theQuestionToShow });\n    setQ({ ...theQuestionToShow }); //Ellers lukker modal når svar bliver mere end \"\"\n    //console.log(q);\n    //console.log(qToShow);\n    openShowQ();\n  };\n\n  const handleChangeShowQ = (event) => {\n    //console.log(event.target.value);\n    const target = event.target;\n    //console.log(target);\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    //console.log(\"Value: \" + target.type === \"checkbox\" ? target.checked : target.value);\n    const name = target.name;\n    console.log(\"Name: \" + name);\n    // if (name === \"name\" || name === \"email\") {\n    //   console.log(name);\n    //   q.student[name] = value;\n    //   setQ({ ...q, [name]: value });\n    // }\n    if (\n      name === \"teacherName\" ||\n      name === \"zoom_url\" ||\n      name === \"email\" ||\n      name === \"password\"\n    ) {\n      q.answer.teacher[name] = value;\n      setQ({ ...q });\n    } else if (name === \"answer\") {\n      q.answer.answer = value;\n      setQ({ ...q });\n    } else {\n      q.answer[name] = value;\n      setQ({ ...q, [name]: value });\n    }\n    // q[name] = value;\n    // setQ({ ...q, [name]: value });\n    //console.log(q);\n    console.log(qToShow);\n  };\n\n  const handleSubmitShowQ = (event) => {\n    event.preventDefault();\n    const answerToSend = {\n      id: q.id,\n      answer: {\n        teacher: {\n          email: teacherEmail,\n        },\n        answer: q.answer.answer,\n        teacherLink: q.answer.teacherLink,\n      },\n    };\n    console.log(answerToSend);\n    facade.addAnswer(answerToSend, (data) => {\n      console.log(data);\n      setQ({ ...question });\n      setQtoShow({ ...question });\n      setOpdateList(!opdateList); //Bruges til at opdatere liste\n    });\n\n    closeShowQ();\n  };\n\n  const search = (event) => {\n    //console.log(event.target.value);\n    const searchField = event.target.value.toLowerCase();\n    //console.log(\"Søger...\");\n    if (searchField.length > 0) {\n      //console.log(\"Der står noget\");\n      const newList = qListToSearch.filter(\n        (q) =>\n          q.answer.answer.toLowerCase().includes(searchField) ||\n          q.topic.toLowerCase().includes(searchField) ||\n          q.description.toLowerCase().includes(searchField)\n      );\n      //console.log(newList);\n      setQlist([...newList]);\n    } else {\n      //console.log(\"Der står IKKE noget\");\n      setOpdateList(!opdateList); //Bruges til at opdatere liste\n    }\n  };\n\n  return (\n    <div>\n      {/* {console.log(schoolName)} */}\n      {/* {console.log(schoolId)} */}\n      {/* {console.log(uddName)} */}\n      {/* {console.log(uddId)} */}\n      {/* {console.log(semesterName)} */}\n      {console.log(semesterId)}\n      {/* {console.log(qList)} */}\n      {/* {console.log(oldQ)} */}\n      {/* {console.log(\n        new Date(question.timestamp).getUTCDate() +\n          \"-\" +\n          new Date(question.timestamp).getUTCMonth() +\n          \"-\" +\n          new Date(question.timestamp).getUTCFullYear()\n      )} */}\n      {/* {console.log(new Date(question.timestamp).toLocaleDateString())} */}\n      {/* {console.log(new Date(question.timestamp).toTimeString().slice(0, 5))} */}\n      {/* <img className=\"img-fluid\" src=\"images/tutor.png\" alt=\"tutor\" /> */}\n      <div className=\"row\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <h1 className=\"text-center\">Hvad kan jeg hjælpe dig med?</h1>\n          <div className=\"text-center\">\n            <img className=\"img-fluid\" src={picture} alt=\"tutor\" width=\"25%\" />\n          </div>\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      {/* Opret spørgsmål */}\n      <div className=\"row\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10 text-center\">\n          <button className=\"btn btn-primary btn-sm\" onClick={openCreateQ}>\n            Opret et Spørgmål\n          </button>\n          <p id=\"errorMsg\" style={{ color: \"red\" }}></p>\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n      <br></br>\n\n      {/* Søg i gamle besvarelser */}\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <form>\n            <div className=\"form-check\">\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                id=\"findOldQ\"\n                onChange={() => setOldQ(!oldQ)}\n              />\n              <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n                Tidligere Spørgsmål\n              </label>\n            </div>\n            {oldQ === false ? (\n              \"\"\n            ) : (\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control w-50\"\n                  id=\"find\"\n                  name=\"find\"\n                  placeholder=\"Søg i emner og spørgsmål...\"\n                  size=\"10px\"\n                  onChange={search}\n                />\n              </div>\n            )}\n          </form>\n        </div>\n      </div>\n\n      {/* Tabel  */}\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                {oldQ === false ? <th scope=\"col\">Kø</th> : \"\"}\n                <th scope=\"col\">Navn</th>\n                <th scope=\"col\">Emne</th>\n                <th scope=\"col\">Dato</th>\n                <th scope=\"col\">Spørgsmål</th>\n              </tr>\n            </thead>\n            <tbody>\n              {qList.map((next, index) => (\n                <tr\n                  style={{ cursor: \"pointer\" }}\n                  key={next.id}\n                  id={next.id}\n                  onClick={handleShowQ}\n                >\n                  {oldQ === false ? <th scope=\"row\">{index + 1}</th> : \"\"}\n                  <td>{next.student.name}</td>\n                  <td>{next.topic}</td>\n                  <td>\n                    {new Date(next.timestamp.replace(\" \", \"T\"))\n                      .toLocaleDateString()\n                      .replaceAll(\".\", \"-\") +\n                      \" \" +\n                      new Date(next.timestamp.replace(\" \", \"T\"))\n                        .toTimeString()\n                        .slice(0, 5)}\n                  </td>\n                  {/* <td>{next.status === false ? \"Afenter\" : \"Besvaret\"}</td> */}\n                  <td style={{ maxWidth: \"300px\" }}>\n                    {next.description.length > 80\n                      ? next.description.slice(0, 79) + \"...\"\n                      : next.description}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Create Q */}\n      <CreateQModal\n        open={createQ}\n        onClose={closeCreateQ}\n        center\n        classNames={{\n          overlay: \"customOverlay\",\n          modal: \"customModal\",\n        }}\n        // isOpen={createQ}\n        // onAfterOpen={afterOpenModal}\n        // onRequestClose={closeCreateQ}\n        // style={bigModalStyle}\n        // contentLabel=\"Create Q\"\n      >\n        <h3 className=\"text-center\">Opret Spørgsmål</h3>\n        <hr />\n        <form onChange={handleChangeCreateQ} onSubmit={handleSubmitCreateQ}>\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Navn:\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Skriv dit navn...\"\n              defaultValue={q.student.name}\n              required\n            />\n          </div> */}\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"col-form-label\">\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Skriv din skolemail...\"\n              defaultValue={q.student.email}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"topic\" className=\"col-form-label\">\n              Emne:\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"topic\"\n              name=\"topic\"\n              placeholder=\"Skriv et emne...\"\n              defaultValue={q.topic}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"question\" className=\"col-form-label\">\n              Spørgmål:\n            </label>\n            <textarea\n              className=\"form-control\"\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"Beskriv problemet...\"\n              defaultValue={q.description}\n              rows=\"5\"\n              required\n            ></textarea>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"link\" className=\"col-form-label\">\n              Ekstern Link:\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"studentLink\"\n              name=\"studentLink\"\n              placeholder=\"Indsæt evt et link...\"\n              defaultValue={q.studentLink}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\" className=\"col-form-label\">\n              {/* Sikkerhedskode: */}\n            </label>\n            <input\n              type=\"hidden\"\n              className=\"form-control\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Skriv et kodeord...\"\n              // defaultValue={q.password}\n              defaultValue=\"Kodeord1234\"\n              required\n            />\n          </div>\n\n          {/* <input type=\"hidden\" id=\"id\" /> */}\n\n          <hr />\n\n          <div className=\"form-group\">\n            <div className=\"row\">\n              <div className=\"col-auto mr-auto\"></div>\n              <div className=\"col-auto\">\n                <button\n                  style={{ width: \"65px\" }}\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={closeCreateQ}\n                >\n                  Luk\n                </button>\n                <button\n                  style={{ width: \"65px\" }}\n                  type=\"submit\"\n                  style={{ marginLeft: 5 }}\n                  className=\"btn btn-primary\"\n                >\n                  Opret\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </CreateQModal>\n\n      {/* Show Q */}\n      <ShowQModal\n        open={showQ}\n        onClose={closeShowQ}\n        center\n        classNames={{\n          overlay: \"customOverlay\",\n          modal: \"customModal\",\n        }}\n\n        // isOpen={showQ}\n        // onAfterOpen={afterOpenModal}\n        // onRequestClose={closeShowQ}\n        // style={bigModalStyle}\n        // contentLabel=\"Show Q\"\n      >\n        <h3 className=\"text-center\">Spørgsmålet</h3>\n\n        <hr />\n\n        <div>\n          <h4 className=\"text-center\">{qToShow.topic}</h4>\n        </div>\n        <div>\n          <p>{qToShow.description}</p>\n        </div>\n        <br></br>\n        <div>\n          <a\n            href={qToShow.studentLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <button className=\"btn btn-primary btn-sm\">\n              Ekstern Link fra Elev\n            </button>\n          </a>\n        </div>\n        <br />\n        <hr />\n\n        {qToShow.answer.id === -1 ? (\n          isLoggedIn === false ? (\n            <div>\n              <div>\n                <h4 className=\"text-center\">Afventer besvarelse....</h4>\n              </div>\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <hr />\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-auto mr-auto\"></div>\n                  <div className=\"col-auto\">\n                    <button\n                      style={{ width: \"65px\" }}\n                      type=\"button\"\n                      className=\"btn btn-dark\"\n                      onClick={closeShowQ}\n                    >\n                      Luk\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div>\n                <h4 className=\"text-center\">Besvar spørgmålet</h4>\n              </div>\n              <form onChange={handleChangeShowQ} onSubmit={handleSubmitShowQ}>\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"name\" className=\"col-form-label\">\n                    Navn:\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"teacherName\"\n                    name=\"teacherName\"\n                    placeholder=\"Skriv dit navn...\"\n                    defaultValue={qToShow.answer.teacher.teacherName}\n                    required\n                  />\n                </div> */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\" className=\"col-form-label\">\n                    Email:\n                  </label>\n                  <input\n                    readOnly\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Skriv din email...\"\n                    defaultValue={teacherEmail}\n                    required\n                  />\n                </div>\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"name\" className=\"col-form-label\">\n                    Kodeord:\n                  </label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Skriv dit kodeord...\"\n                    defaultValue={qToShow.answer.teacher.password}\n                    required\n                  />\n                </div> */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"question\" className=\"col-form-label\">\n                    Svar:\n                  </label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"answer\"\n                    name=\"answer\"\n                    placeholder=\"Skriv dit svar her...\"\n                    defaultValue={qToShow.answer.answer}\n                    rows=\"5\"\n                    required\n                  ></textarea>\n                </div>\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"link\" className=\"col-form-label\">\n                    Zoom:\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"zoom_url\"\n                    name=\"zoom_url\"\n                    placeholder=\"Indsæt Zoom link...\"\n                    defaultValue={qToShow.answer.teacher.zoom_url}\n                  />\n                </div> */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"link\" className=\"col-form-label\">\n                    Ekstern Link:\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"teacherLink\"\n                    name=\"teacherLink\"\n                    placeholder=\"Indsæt link...\"\n                    defaultValue={qToShow.answer.teacherLink}\n                  />\n                </div>\n                <br />\n                <hr />\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col-auto mr-auto\"></div>\n                    <div className=\"col-auto\">\n                      <button\n                        style={{ width: \"65px\" }}\n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={closeShowQ}\n                      >\n                        Luk\n                      </button>\n                      <button\n                        style={{ width: \"65px\" }}\n                        id={qToShow.id}\n                        //   onClick={}\n                        style={{ marginLeft: 5 }}\n                        className=\"btn btn-primary\"\n                      >\n                        Besvar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          )\n        ) : (\n          <div>\n            <div>\n              <h4 className=\"text-center\">\n                Besvaret af: {qToShow.answer.teacher.teacherName}\n              </h4>\n            </div>\n            <div>\n              <p>{qToShow.answer.answer}</p>\n            </div>\n\n            <br></br>\n            <div>\n              <a\n                href={qToShow.answer.teacher.zoom_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <button className=\"btn btn-primary btn-sm\">Zoom</button>\n              </a>\n            </div>\n            <br></br>\n            <div>\n              <a\n                href={qToShow.answer.teacherLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <button className=\"btn btn-primary btn-sm\">\n                  Ekstern Link fra Tutor\n                </button>\n              </a>\n            </div>\n            <br />\n            <hr />\n            <div className=\"form-group\">\n              <div className=\"row\">\n                <div className=\"col-auto mr-auto\"></div>\n                <div className=\"col-auto\">\n                  <button\n                    style={{ width: \"65px\" }}\n                    type=\"button\"\n                    className=\"btn btn-dark\"\n                    onClick={closeShowQ}\n                  >\n                    Luk\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </ShowQModal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  // BrowserRouter as Router,\n  // Switch,\n  // Route,\n  Link,\n  // NavLink,\n  // Redirect,\n  // useLocation,\n  // Prompt,\n  // useRouteMatch,\n  // useParams,\n  // useHistory,\n} from \"react-router-dom\";\nimport \"../style/skoleStyle.css\";\n\nexport default function Home(props) {\n  const { facade, schoolData } = props;\n\n  return (\n    <div>\n      {/* {console.log(props.isLoggedIn)} */}\n      {console.log(schoolData)}\n      <div className=\"row\">\n        {schoolData.map((school) => (\n          <div className=\"col-md-4 theMargin\" key={school.id}>\n            <div className=\"item-box the-box\">\n              <Link className=\"\" to={`/` + school.name}>\n                <img\n                  className=\"img-fluid the-image imgSchool\"\n                  src={school.img}\n                  alt={school.name}\n                />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n      <br></br>\n      <br></br>\n      <br></br>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n    // BrowserRouter as Router,\n    // Switch,\n    // Route,\n    // Link,\n    // NavLink,\n    // Redirect,\n    useLocation\n  } from \"react-router-dom\";\n\n  export default function NoMatch() {\n    let location = useLocation();\n  \n    return (\n      <div>\n        <h3>\n          Code: 404 - No match for <code>{location.pathname}</code>\n        </h3>\n      </div>\n    );\n  }","import React, { useState, useEffect } from \"react\";\nimport {\n  // BrowserRouter as Router,\n  // Switch,\n  // Route,\n  // Link,\n  // NavLink,\n  // Redirect,\n  useLocation,\n  // Prompt,\n  // useRouteMatch,\n  // useParams,\n  // useHistory,\n} from \"react-router-dom\";\n\nexport default function Login(props) {\n  const {\n    loginMsg,\n    isLoggedIn,\n    setLoginStatus,\n    utils,\n    login,\n    displayError,\n    clearError,\n  } = props;\n\n  const init = { username: \"\", password: \"\" };\n  const [loginCredentials, setLoginCredentials] = useState(init);\n  // const [error, setError] = useState(false);\n\n  const { state } = useLocation();\n  //Vi sætter den side vi gerne vil til, selv om vi ikke er logget ind\n  //Logout sætter from til \"undefined\"\n  const from = state ? state.from : \"/\";\n\n  const performLogin = (evt) => {\n    evt.preventDefault();\n    setTimeout(function () {\n      clearError();\n    }, 2500);\n    login(loginCredentials.username, loginCredentials.password, from);\n  };\n\n  const onChange = (evt) => {\n    setLoginCredentials({\n      ...loginCredentials,\n      [evt.target.id]: evt.target.value,\n    });\n  };\n\n  // Logger selv ud når vi trykker på logout\n  useEffect(() => {\n    if (isLoggedIn) {\n      utils.logout();\n      setLoginStatus(!isLoggedIn);\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {/* {console.log(utils)} */}\n      <div className=\"row\">\n        <div className=\"col-sm-2 text-center\"></div>\n        <div className=\"col-sm-8 text-center\">\n        <h2>Underviser Login</h2>\n          <form onChange={onChange}>\n            <input className=\"form-control\" placeholder=\"Skriv email...\" type=\"text\" id=\"username\" />{\" \"}\n            <input className=\"form-control\" placeholder=\"Skriv kodeord...\" type=\"password\" id=\"password\" />{\" \"}\n            <p></p>\n            <button className=\"btn btn-primary\" onClick={performLogin}>{loginMsg}</button>\n            {console.log(displayError)}\n            {displayError.length > 0 ? (\n              <p className=\"alert alert-danger\" style={{ width: \"415px\" }}>\n                {displayError}\n              </p>\n            ) : (\n              \"\"\n            )}\n          </form>\n        </div>\n        <div className=\"col-sm-2 text-center\"></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  // BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link,\n  // NavLink,\n  // Redirect,\n  // useLocation,\n  // Prompt,\n  // useRouteMatch,\n  // useParams,\n  useHistory,\n} from \"react-router-dom\";\nimport Logo from \"./components/Logo.component\";\nimport Header from \"./components/Header.component\";\nimport Uddannelse from \"./components/Uddannelse.component\";\nimport Semester from \"./components/Semester.component\";\nimport Queue from \"./components/Queue.component\";\n\nimport Home from \"./components/Home.component\";\n\n\nimport NoMatch from \"./components/NoMatch.component\";\nimport Login from \"./components/Login.component\";\n// import PrivateRoute from \"./components/PrivateRoute.component\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const defaultList = [];\n  const { facade, utils } = props;\n  const [schoolData, setSchoolData] = useState([...defaultList]);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [displayError, setDisplayError] = useState(\"\");\n  let history = useHistory();\n\n  useEffect(() => {\n    facade.getData((data) => {\n      console.log(data);\n      setSchoolData([...data]);\n    });\n  }, []);\n\n  const setLoginStatus = (status, pageToGoTo) => {\n    // console.log(pageToGoTo)\n    //Redurect to home if logut is pressed ==> pageToGoTo === \"undefined\"\n    if (typeof pageToGoTo === \"undefined\") {\n      pageToGoTo = \"/\";\n      // console.log(pageToGoTo)\n    }\n    setIsLoggedIn(status);\n    history.push(pageToGoTo);\n  };\n\n  const login = (user, pass, from) => {\n    /*TODO*/\n    utils\n      .login(user, pass)\n      .then((res) => {\n        setLoginStatus(true, from);\n        //setIsLoggedIn(true);\n        setDisplayError(\"\");\n      })\n      .catch((error) => {\n        error.fullError.then((errorMsg) => {\n          console.log(errorMsg);\n          setDisplayError(\n            // \"Error: Status: \" +\n            //   errorMsg.code +\n            //   \" -  Message: \" +\n            errorMsg.message\n          );\n        });\n      });\n  };\n\n  const clearError = () => {\n    setDisplayError(\"\");\n  };\n\n  return (\n    <div className=\"container\">\n      {/* {console.log(schoolData)} */}\n      {/* {console.log(props.bookFacade.getBooks)} */}\n      <Logo />\n      <Header\n        loginMsg={isLoggedIn ? \"Logout\" : \"Login\"}\n        isLoggedIn={isLoggedIn}\n      />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home\n            utils={utils}\n            facade={facade}\n            isLoggedIn={isLoggedIn}\n            schoolData={schoolData}\n          />\n        </Route>\n\n        {/* Home Page Option */}\n        {schoolData.map((school) => (\n          <Route exact path={`/` + school.name} key={school.id}>\n            <Uddannelse\n              uddannelse={schoolData.find((s) => s.name === school.name)}\n              schoolName={school.name}\n              facade={facade}\n            />\n          </Route>\n        ))}\n\n        {/* Udd Page Option */}\n        {schoolData.map((school) =>\n          school.educations.map((udd) => (\n            // console.log(`/` + school.name + `/` + udd.name)\n            <Route exact path={`/` + school.name + `/` + udd.name} key={udd.id}>\n              <Semester\n                uddannelse={schoolData.find((s) => s.name === school.name)}\n                schoolName={school.name}\n                uddName={udd.name}\n                facade={facade}\n              />\n            </Route>\n          ))\n        )}\n\n        {/* Udd Page Option */}\n        {schoolData.map((school) =>\n          school.educations.map((udd) =>\n            udd.semesters.map((semester) => (\n              // console.log(`/` + school.name + `/` + udd.name + `/` + semester.name)\n              <Route\n                exact\n                path={`/` + school.name + `/` + udd.name + `/` + semester.name}\n                key={semester.id}\n              >\n                <Queue\n                  schoolName={school.name}\n                  schoolId={school.id}\n                  uddName={udd.name}\n                  uddId={udd.id}\n                  semesterName={semester.name}\n                  semesterId={semester.id}\n                  facade={facade}\n                  isLoggedIn={isLoggedIn}\n                />\n              </Route>\n            ))\n          )\n        )}\n\n        <Route path=\"/login-out\">\n          <Login\n            loginMsg={isLoggedIn ? \"Logout\" : \"Login\"}\n            isLoggedIn={isLoggedIn}\n            setLoginStatus={setLoginStatus}\n            utils={utils}\n            login={login}\n            displayError={displayError}\n            clearError={clearError}\n          />\n        </Route>\n\n        <Route path=\"*\">\n          <NoMatch />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const SERVER_URL_BACKEND = \"https://api.thequeue.dk\";\nexport { SERVER_URL_BACKEND };\n","import { SERVER_URL } from \"./settings\";\nimport { SERVER_URL_BACKEND } from \"./settingsBackend\";\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    //console.log(res);\n    if (res.status === 401) {\n      document.getElementById(\"errorMsg\").innerHTML =\n        \"Email blev ikke varificeret...\";\n      document.getElementById(\"errorMsg\").style.display = \"block\";\n      setInterval(function () {\n        document.getElementById(\"errorMsg\").innerHTML =\n        \"\";\n      document.getElementById(\"errorMsg\").style.display = \"none\";\n      }, 2500);\n    }\n    //   const message = res.statusText === \"\" ? \"Something went wrong... :(\" : \"\";\n    //   document.getElementById(\"errorMsg\").innerHTML =\n    //     \"Status code: \" + res.status + \", message: \" + message;\n\n    return Promise.reject({ status: res.status, fullError: res.json() });\n  }\n  return res.json();\n}\n\nfunction apiUtils() {\n  function makeOptions(method, addToken, body) {\n    // console.log(method);\n    method = method ? method : \"GET\";\n    var opts = {\n      method: method,\n      headers: {\n        ...([\"PUT\", \"POST\"].includes(method) && {\n          //using spread operator to conditionally add member to headers object.\n          \"Content-type\": \"application/json\",\n        }),\n        Accept: \"application/json\",\n      },\n    };\n    // console.log(method);\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n    return opts;\n  }\n\n  function fetchAny(url, callback, method, body) {\n    // console.log(url);\n    //console.log(callback);\n    // console.log(method);\n    //console.log(body);\n    const options = makeOptions(method, true, body);\n    //console.log(options);\n    fetch(url, options)\n      .then((res) => handleHttpErrors(res))\n      .then((data) => callback(data))\n      .catch((err) => {\n        if (err.status) {\n          err.fullError.then((e) => console.log(e.detail));\n        } else {\n          console.log(\"Network error\");\n        }\n      });\n  }\n\n  function login(user, password) {\n    //console.log(user);\n    //console.log(password);\n    /*TODO*/\n    const options = makeOptions(\"POST\", true, {\n      // user: user,\n      email: user,\n      password: password,\n    });\n\n    return fetch(SERVER_URL_BACKEND + \"/api/auth/\", options)\n      .then(handleHttpErrors)\n      .then((res) => {\n        // console.log(res);\n        // document.getElementById(\"error\").innerHTML = \"\";\n        setToken(res.token);\n        saveEmail(user);\n      });\n  }\n\n  function fetchWelcomeData() {\n    /*TODO */\n    const options = makeOptions(\"GET\", true); //True add's the token\n    return fetch(SERVER_URL + \"/api/info/admin\", options).then(\n      handleHttpErrors\n    );\n  }\n\n  const setToken = (token) => {\n    localStorage.setItem(\"jwtToken\", token);\n  };\n\n  const saveEmail = (email) => {\n    localStorage.setItem(\"teacherEmail\", email);\n  };\n\n  const getToken = () => {\n    return localStorage.getItem(\"jwtToken\");\n  };\n\n  const loggedIn = () => {\n    const loggedIn = getToken() != null;\n    return loggedIn;\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"teacherEmail\");\n  };\n\n  return {\n    makeOptions,\n    fetchAny,\n    // fetchAnyNoToken,\n    login,\n    fetchWelcomeData,\n    setToken,\n    getToken,\n    loggedIn,\n    logout,\n  };\n}\n\nconst utils = apiUtils();\nexport default utils;\n\n//   export default { fetchAny, login, fetchWelcomeData, makeOptions };\n","import utils from \"../utils\";\nimport { SERVER_URL_BACKEND } from \"../settingsBackend\";\n\nfunction apiFacade() {\n  //OBSERVE fetchAny takes a url and a callback. The callback handles the data from the response body.\n\n  /**\n   * Backend DATA LOCAL\n   */\n  // function getData() {\n  //   return data;\n  // }\n\n  // function addQuestion(question) {\n  //   question.id = questions.length + 1;\n  //   questions.push(question);\n  // }\n\n  // function getQuestions() {\n  //   return questions;\n  // }\n\n  // function getOldQuestions() {\n  //   return questions;\n  // }\n\n  // function getQuestion(id) {\n  //   return questions.find((q) => q.id === parseInt(id));\n  // }\n\n  // function editQuestion(question) {\n  //   let questionToEdit = questions.find((q) => q.id === question.id);\n  //   questionToEdit.teacher.teacherName = question.teacher.teacherName;\n  //   questionToEdit.teacher.zoom_url = question.teacher.zoom_url;\n  //   questionToEdit.answer = question.answer;\n  //   questionToEdit.teacherLink = question.teacherLink;\n  // }\n\n  // function getProxy() {\n  //   return proxyData;\n  // }\n\n  /**\n   * Backend DATA SERVER\n   */\n\n  function getData(callback) {\n    // Change me to do something with data\n    utils.fetchAny(SERVER_URL_BACKEND + \"/api/schools/all\", callback);\n  }\n\n  function addQuestion(question, callback) {\n    utils.fetchAny(\n      SERVER_URL_BACKEND + \"/api/question\",\n      callback,\n      \"POST\",\n      question\n    );\n  }\n\n  function getQuestions(semesterID, callback) {\n    utils.fetchAny(\n      SERVER_URL_BACKEND + \"/api/questions/semester/\" + semesterID,\n      callback\n    );\n  }\n\n  function getProxy(callback) {\n    utils.fetchAny(SERVER_URL_BACKEND + \"/api/covid\", callback);\n  }\n\n  function addAnswer(answer, callback) {\n    utils.fetchAny(\n      SERVER_URL_BACKEND + \"/api/question\",\n      callback,\n      \"PUT\",\n      answer\n    );\n  }\n\n  return {\n    getData,\n    addQuestion,\n    getQuestions,\n    // getOldQuestions,\n    // getQuestion,\n    // editQuestion,\n    getProxy,\n    addAnswer,\n  };\n}\nconst facade = apiFacade();\nexport default facade;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport utils from \"./utils\";\nimport facade from \"./facades/examFacade\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst AppWithRouter = () => {\n  return (\n    <Router>\n      <App facade={facade} utils={utils} />\n    </Router>\n  );\n};\nReactDOM.render(<AppWithRouter />, document.getElementById(\"root\"));\n"],"sourceRoot":""}