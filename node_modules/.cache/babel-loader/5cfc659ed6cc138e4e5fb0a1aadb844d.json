{"ast":null,"code":"import utils from\"../utils\";import{SERVER_URL_BACKEND}from\"../settingsBackend\";// import { SERVER_URL } from \"../settings\";\n// import { data } from \"../data/data\";\n// let questions = [\n//   {\n//     id: 1,\n//     semesterId: 23,\n//     student: {\n//       name: \"TestName\",\n//       email: \"test@test.dk\",\n//     },\n//     topic: \"Test emne\",\n//     description: \"Dette er mit test problem...\",\n//     studentLink: \"https://google.com\",\n//     password: \"1234\",\n//     timestamp: \"2021-05-05 12:52:07.0\",\n//     teacher: {\n//       teacherName: \"Arik\",\n//       zoom_url: \"https://zoom.com\",\n//     },\n//     answer: \"Dette er min besvarelse til dig\",\n//     teacherLink: \"https://codedev.dk\",\n//   },\n//   {\n//     id: 2,\n//     semesterId: 23,\n//     student: {\n//       name: \"Hans\",\n//       email: \"test@test.dk\",\n//     },\n//     topic: \"New Test emne\",\n//     description: \"Dette er mit test problem...\",\n//     studentLink: \"https://google.com\",\n//     password: \"1234\",\n//     timestamp: \"2021-05-05 12:52:07.0\",\n//     teacher: {\n//       teacherName: \"\",\n//       zoom_url: \"\",\n//     },\n//     answer: \"\",\n//     teacherLink: \"\",\n//   },\n// ];\n// const proxyData = {\n//   tested: 13495620,\n//   infected: 198472,\n//   recovered: 187318,\n//   deceased: 2125,\n//   dailyInfected: 377,\n//   dailyDead: 19,\n//   dailyRecovered: 706,\n//   uniqueTests: 4200576,\n//   admissions: 534,\n//   respirator: 73,\n//   intensive: 98,\n//   newAdmissions: 21,\n//   admissionsDiff: -7,\n//   respiratorDiff: -6,\n//   intensiveDiff: -4,\n//   uniqueTestsDiff: 6948,\n//   testsDiff: 126275,\n//   dailyInfectedDiff: -54,\n//   country: \"Denmark\",\n//   historyData:\n//     \"https://api.apify.com/v2/datasets/Ugq8cNqnhUSjfJeHr/items?format=json&clean=1\",\n//   sourceUrl:\n//     \"https://www.ssi.dk/sygdomme-beredskab-og-forskning/sygdomsovervaagning/c/covid19-overvaagning\",\n//   lastUpdatedAtApify: \"2021-05-06T18:00:00.000Z\",\n//   lastUpdatedAtSource: \"2021-01-31T00:00:00.000Z\",\n//   readMe: \"https://apify.com/tugkan/covid-dk\",\n// };\nfunction apiFacade(){//OBSERVE fetchAny takes a url and a callback. The callback handles the data from the response body.\n/**\n   * Backend DATA LOCAL\n   */ // function getData() {\n//   return data;\n// }\n// function addQuestion(question) {\n//   question.id = questions.length + 1;\n//   questions.push(question);\n// }\n// function getQuestions() {\n//   return questions;\n// }\n// function getOldQuestions() {\n//   return questions;\n// }\n// function getQuestion(id) {\n//   return questions.find((q) => q.id === parseInt(id));\n// }\n// function editQuestion(question) {\n//   let questionToEdit = questions.find((q) => q.id === question.id);\n//   questionToEdit.teacher.teacherName = question.teacher.teacherName;\n//   questionToEdit.teacher.zoom_url = question.teacher.zoom_url;\n//   questionToEdit.answer = question.answer;\n//   questionToEdit.teacherLink = question.teacherLink;\n// }\n// function getProxy() {\n//   return proxyData;\n// }\n/**\n   * Backend DATA SERVER\n   */function getData(callback){// Change me to do something with data\nutils.fetchAny(SERVER_URL_BACKEND+\"/api/schools/all\",callback);}function addQuestion(question,callback){utils.fetchAny(SERVER_URL_BACKEND+\"/api/question\",callback,\"POST\",question);}function getQuestions(semesterID,callback){utils.fetchAny(SERVER_URL_BACKEND+\"/api/questions/semester/\"+semesterID,callback);}function getProxy(callback){utils.fetchAny(SERVER_URL_BACKEND+\"/api/covid\",callback);}function addAnswer(answer,callback){utils.fetchAny(SERVER_URL_BACKEND+\"/api/question\",callback,\"PUT\",answer);}return{getData:getData,addQuestion:addQuestion,getQuestions:getQuestions,// getOldQuestions,\n// getQuestion,\n// editQuestion,\ngetProxy:getProxy,addAnswer:addAnswer};}var facade=apiFacade();export default facade;","map":{"version":3,"names":["utils","SERVER_URL_BACKEND","apiFacade","getData","callback","fetchAny","addQuestion","question","getQuestions","semesterID","getProxy","addAnswer","answer","facade"],"sources":["/var/www/html/src/facades/examFacade.js"],"sourcesContent":["import utils from \"../utils\";\nimport { SERVER_URL_BACKEND } from \"../settingsBackend\";\n// import { SERVER_URL } from \"../settings\";\n// import { data } from \"../data/data\";\n\n// let questions = [\n//   {\n//     id: 1,\n//     semesterId: 23,\n//     student: {\n//       name: \"TestName\",\n//       email: \"test@test.dk\",\n//     },\n//     topic: \"Test emne\",\n//     description: \"Dette er mit test problem...\",\n//     studentLink: \"https://google.com\",\n//     password: \"1234\",\n//     timestamp: \"2021-05-05 12:52:07.0\",\n//     teacher: {\n//       teacherName: \"Arik\",\n//       zoom_url: \"https://zoom.com\",\n//     },\n//     answer: \"Dette er min besvarelse til dig\",\n//     teacherLink: \"https://codedev.dk\",\n//   },\n//   {\n//     id: 2,\n//     semesterId: 23,\n//     student: {\n//       name: \"Hans\",\n//       email: \"test@test.dk\",\n//     },\n//     topic: \"New Test emne\",\n//     description: \"Dette er mit test problem...\",\n//     studentLink: \"https://google.com\",\n//     password: \"1234\",\n//     timestamp: \"2021-05-05 12:52:07.0\",\n//     teacher: {\n//       teacherName: \"\",\n//       zoom_url: \"\",\n//     },\n//     answer: \"\",\n//     teacherLink: \"\",\n//   },\n// ];\n\n// const proxyData = {\n//   tested: 13495620,\n//   infected: 198472,\n//   recovered: 187318,\n//   deceased: 2125,\n//   dailyInfected: 377,\n//   dailyDead: 19,\n//   dailyRecovered: 706,\n//   uniqueTests: 4200576,\n//   admissions: 534,\n//   respirator: 73,\n//   intensive: 98,\n//   newAdmissions: 21,\n//   admissionsDiff: -7,\n//   respiratorDiff: -6,\n//   intensiveDiff: -4,\n//   uniqueTestsDiff: 6948,\n//   testsDiff: 126275,\n//   dailyInfectedDiff: -54,\n//   country: \"Denmark\",\n//   historyData:\n//     \"https://api.apify.com/v2/datasets/Ugq8cNqnhUSjfJeHr/items?format=json&clean=1\",\n//   sourceUrl:\n//     \"https://www.ssi.dk/sygdomme-beredskab-og-forskning/sygdomsovervaagning/c/covid19-overvaagning\",\n//   lastUpdatedAtApify: \"2021-05-06T18:00:00.000Z\",\n//   lastUpdatedAtSource: \"2021-01-31T00:00:00.000Z\",\n//   readMe: \"https://apify.com/tugkan/covid-dk\",\n// };\n\nfunction apiFacade() {\n  //OBSERVE fetchAny takes a url and a callback. The callback handles the data from the response body.\n\n  /**\n   * Backend DATA LOCAL\n   */\n  // function getData() {\n  //   return data;\n  // }\n\n  // function addQuestion(question) {\n  //   question.id = questions.length + 1;\n  //   questions.push(question);\n  // }\n\n  // function getQuestions() {\n  //   return questions;\n  // }\n\n  // function getOldQuestions() {\n  //   return questions;\n  // }\n\n  // function getQuestion(id) {\n  //   return questions.find((q) => q.id === parseInt(id));\n  // }\n\n  // function editQuestion(question) {\n  //   let questionToEdit = questions.find((q) => q.id === question.id);\n  //   questionToEdit.teacher.teacherName = question.teacher.teacherName;\n  //   questionToEdit.teacher.zoom_url = question.teacher.zoom_url;\n  //   questionToEdit.answer = question.answer;\n  //   questionToEdit.teacherLink = question.teacherLink;\n  // }\n\n  // function getProxy() {\n  //   return proxyData;\n  // }\n\n  /**\n   * Backend DATA SERVER\n   */\n\n  function getData(callback) {\n    // Change me to do something with data\n    utils.fetchAny(SERVER_URL_BACKEND + \"/api/schools/all\", callback);\n  }\n\n  function addQuestion(question, callback) {\n    utils.fetchAny(\n      SERVER_URL_BACKEND + \"/api/question\",\n      callback,\n      \"POST\",\n      question\n    );\n  }\n\n  function getQuestions(semesterID, callback) {\n    utils.fetchAny(\n      SERVER_URL_BACKEND + \"/api/questions/semester/\" + semesterID,\n      callback\n    );\n  }\n\n  function getProxy(callback) {\n    utils.fetchAny(SERVER_URL_BACKEND + \"/api/covid\", callback);\n  }\n\n  function addAnswer(answer, callback) {\n    utils.fetchAny(\n      SERVER_URL_BACKEND + \"/api/question\",\n      callback,\n      \"PUT\",\n      answer\n    );\n  }\n\n  return {\n    getData,\n    addQuestion,\n    getQuestions,\n    // getOldQuestions,\n    // getQuestion,\n    // editQuestion,\n    getProxy,\n    addAnswer,\n  };\n}\nconst facade = apiFacade();\nexport default facade;\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,UAAlB,CACA,OAASC,kBAAT,KAAmC,oBAAnC,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAASC,UAAT,EAAqB,CACnB;AAEA;AACF;AACA,KALqB,CAMnB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACF;AACA,KAEE,QAASC,QAAT,CAAiBC,QAAjB,CAA2B,CACzB;AACAJ,KAAK,CAACK,QAAN,CAAeJ,kBAAkB,CAAG,kBAApC,CAAwDG,QAAxD,EACD,CAED,QAASE,YAAT,CAAqBC,QAArB,CAA+BH,QAA/B,CAAyC,CACvCJ,KAAK,CAACK,QAAN,CACEJ,kBAAkB,CAAG,eADvB,CAEEG,QAFF,CAGE,MAHF,CAIEG,QAJF,EAMD,CAED,QAASC,aAAT,CAAsBC,UAAtB,CAAkCL,QAAlC,CAA4C,CAC1CJ,KAAK,CAACK,QAAN,CACEJ,kBAAkB,CAAG,0BAArB,CAAkDQ,UADpD,CAEEL,QAFF,EAID,CAED,QAASM,SAAT,CAAkBN,QAAlB,CAA4B,CAC1BJ,KAAK,CAACK,QAAN,CAAeJ,kBAAkB,CAAG,YAApC,CAAkDG,QAAlD,EACD,CAED,QAASO,UAAT,CAAmBC,MAAnB,CAA2BR,QAA3B,CAAqC,CACnCJ,KAAK,CAACK,QAAN,CACEJ,kBAAkB,CAAG,eADvB,CAEEG,QAFF,CAGE,KAHF,CAIEQ,MAJF,EAMD,CAED,MAAO,CACLT,OAAO,CAAPA,OADK,CAELG,WAAW,CAAXA,WAFK,CAGLE,YAAY,CAAZA,YAHK,CAIL;AACA;AACA;AACAE,QAAQ,CAARA,QAPK,CAQLC,SAAS,CAATA,SARK,CAAP,CAUD,CACD,GAAME,OAAM,CAAGX,SAAS,EAAxB,CACA,cAAeW,OAAf"},"metadata":{},"sourceType":"module"}